//*Location: LGTMP Stack
/*
Module Components: component_node_exporter
*/

declare "component_node_exporter" {

	/***************************************************************
	* Component - Node Exporter
	****************************************************************/
	// https://grafana.com/docs/alloy/latest/reference/components/prometheus.exporter.unix/
	prometheus.exporter.unix "integrations_node_exporter" {
		procfs_path    = "/proc"
		sysfs_path     = "/sys"
		rootfs_path    = "/rootfs"
		udev_data_path = "/run/udev/data"

	  enable_collectors = [
    "processes",
    "perf",
	"pressure",
    "mountstats",
    "devstat",
    "sysctl",
    "systemd",
  ]
  sysctl {
    include = [
	"kernel.threads-max",
    "fs.file-nr:total,current,max",
	]

  }

  include_exporter_metrics = true
	}

	/***************************************************************
	* Discovery Relabelings (pre-scrape)
	****************************************************************/
	discovery.relabel "integrations_node_exporter" {
		targets = prometheus.exporter.unix.integrations_node_exporter.targets

		rule {
			target_label = "job"
			replacement  = integrations/docker/node-exporter
		}

		rule {
			target_label = "instance"
			replacement  = constants.hostname
		}
	}

	/***************************************************************
	* Prometheus Scrape Integrations Targets
	****************************************************************/
	prometheus.scrape "integrations_node_exporter" {
		targets = array.concat(
			discovery.relabel.integrations_node_exporter.output,
		)

		scrape_classic_histograms = true

		scrape_interval = "30s"
		scrape_timeout  = "10s"

		clustering {
			enabled = true
		}

		forward_to = [prometheus.relabel.integrations_node_exporter.receiver]
	}

	/***************************************************************
	* Prometheus Metric Relabelings (post-scrape)
	****************************************************************/
	prometheus.relabel "integrations_node_exporter" {
		forward_to = argument.forward_to.value

		// keep only metrics that match the keep_metrics regex
		rule {
			source_labels = ["__name__"]
			regex         = "(up|node_uname_info|node_exporter_build_info|node_time_seconds|node_boot_time_seconds|node_load.*|node_cpu.*|node_memory.*|node_disk.*|node_filesystem.*|process_cpu_seconds_total|process_resident_memory_bytes)"
			action        = "keep"
		}

		// Drop metrics for certain file systems
		rule {
			source_labels = ["__name__", "fstype"]
			separator     = "@"
			regex         = "node_filesystem.*@(tempfs)"
			action        = "drop"
		}
	}
}
