//*Location: LGTMP Stack
/*
Module Components: component_process_exporter
*/

declare "component_process_exporter" {

	/*****************************************************************
	* ARGUMENTS
	*****************************************************************/
	argument "forward_to" {
		comment = "Must be a list(MetricssReceiver) where collected metrics should be forwarded to"
	}

	argument "job" {
		optional = true
		default  = "integrations/docker/process-exporter"
	}

	argument "instance_name" {
		optional = true
	}

	argument "scrape_interval" {
		comment  = "How often to scrape metrics from the targets (default: 60s)"
		optional = true
		default  = "30s"
	}

	argument "scrape_timeout" {
		comment  = "How long before a scrape times out (default: 10s)"
		optional = true
		default  = "10s"
	}

	/***************************************************************
	* Component - Process Exporter
	****************************************************************/
	// https://grafana.com/docs/alloy/latest/reference/components/prometheus.exporter.process/
	
	prometheus.exporter.process "integrations_process_exporter" {
  		procfs_path    = "/proc"
		track_children = false
		track_threads = true
		gather_smaps = true
		recheck_on_scrape = true

		matcher {
    	  name = "{{.Comm}}"
		  cmdline = [`.+`] //documentation is incorrect on this one, should be an array not a string
  		}

	}


	/***************************************************************
	* Discovery Relabelings (pre-scrape)
	****************************************************************/
	discovery.relabel "integrations_process_exporter" {
		targets = prometheus.exporter.process.integrations_process_exporter.targets

		rule {
			target_label = "job"
			replacement  = argument.job.value
		}

		rule {
			target_label = "instance"
			replacement  = coalesce(argument.instance_name.value, constants.hostname)
		}
	}

	/***************************************************************
	* Prometheus Scrape Integrations Targets
	****************************************************************/
	prometheus.scrape "integrations_process_exporter" {
		targets = concat(
			discovery.relabel.integrations_process_exporter.output,
		)

		scrape_interval = argument.scrape_interval.value
		scrape_timeout  = argument.scrape_timeout.value

		forward_to = [prometheus.relabel.integrations_process_exporter.receiver]
	}

	/***************************************************************
	* Prometheus Metric Relabelings (post-scrape)
	****************************************************************/
	prometheus.relabel "integrations_process_exporter" {
		forward_to = argument.forward_to.value

	}
}
